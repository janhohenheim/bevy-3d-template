[package]
name = "foxtrot"
authors = ["Jan Hohenheim <jan@hohenheim.ch>"]
version = "0.1.0"
edition = "2021"

[dependencies]
# Bevy dependencies
bevy = { version = "0.14.2", features = ["wayland"] }
blenvy = { version = "0.1.0-alpha.1", git = "https://github.com/janhohenheim/blenvy", branch = "initialization" }
avian3d = { path = "../avian/crates/avian3d" }
avian_interpolation3d = { path = "../avian_interpolation/crates/avian_interpolation3d" }
bevy-inspector-egui = { version = "0.25.2", optional = true }
leafwing-input-manager = { git = "https://github.com/Leafwing-Studios/leafwing_input_manager" }
bevy_dolly = "0.0.4"
bevy-tnua-avian3d = { version = "0.1.1", path = "../bevy-tnua/avian3d" }
bevy-tnua = { version = "0.19.0", path = "../bevy-tnua/"}

# Generic dependencies
rand = "0.8"

# Compile low-severity logs out of native builds for performance.
log = { version = "0.4", features = [
    "max_level_debug",
    "release_max_level_warn",
] }
# Compile low-severity logs out of web builds for performance.
tracing = { version = "0.1", features = [
    "max_level_debug",
    "release_max_level_warn",
] }


[features]
default = [
    # Default to a native dev build.
    "dev",
]
dev = [
    # Improve compile times for dev builds by linking Bevy as a dynamic library.
    "bevy/dynamic_linking",
    "bevy/bevy_dev_tools",
    "bevy-inspector-egui",
    # Enable asset hot reloading for native dev builds.
    "bevy/file_watcher",
    # Enable embedded asset hot reloading for native dev builds.
    "bevy/embedded_watcher",
]


# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"


# Compile with Performance Optimizations:
# https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

# Enable more optimization in the release profile at the cost of compile time.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
